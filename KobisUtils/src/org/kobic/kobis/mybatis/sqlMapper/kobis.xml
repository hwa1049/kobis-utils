<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Kobis">
	<resultMap id="PhylogeneticMap" type="org.kobic.kobis.mybatis.db.vo.PhylogeneticTreeVO">
		<id column="code"		property="code"/>
		<id column="kingdomr"	property="kingdomr"/>
		<id column="kingdom_id" property="kingdom_id"/>
		<id column="phylum"		property="phylum"/>
		<id column="phylum_id"	property="phylum_id"/>
		<id column="class"		property="clas"/>
		<id column="clas_id"	property="class_id"/>
		<id column="ordered"	property="ordered"/>
		<id column="order_id"	property="order_id"/>
		<id column="family"		property="family"/>
		<id column="family_id"	property="family_id"/>
		<id column="genus"		property="genus"/>
		<id column="genus_id"	property="genus_id"/>
		<id column="species"	property="species"/>
		<id column="species_id"	property="species_id"/>
		<id column="ssp"		property="ssp"/>
		<id column="ssp_id"		property="ssp_id"/>
		<id column="var"		property="var"/>
		<id column="var_id"		property="var_id"/>
		<id column="f"			property="f"/>
	</resultMap>

	<resultMap id="TaxonMap" type="org.kobic.kobis.mybatis.db.vo.NameWithTaxonIdVO">
		<id column="name_txt"	property="name_txt"/>
		<id column="tax_id"		property="tax_id"/>
	</resultMap>

	<select id="getInstitutionId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			ins_name
		FROM X2_InstitutionCode
		WHERE ins_cd=#{ins_cd}
	</select>

	<select id="getPhylogeneticTreeByGenus" parameterType="java.lang.String" resultMap="PhylogeneticMap">
		SELECT
			*
		FROM X1_PhylogeneticTree
		WHERE UPPER(GENUS) LIKE CONCAT(UPPER(#{genus}), + '%')
	</select>

	<select id="getPhylogeneticTree" parameterType="java.util.Map" resultType="org.kobic.kobis.mybatis.db.vo.PhylogeneticTreeVO">
		SELECT
			*
		FROM X1_PhylogeneticTree
		WHERE GENUS=${genus} AND 
		(
			UPPER(SSP)=UPPER(#{ssp}) OR UPPER(VAR)=UPPER(#{var}) OR UPPER(F)=UPPER(#{f})
		)
	</select>

	<select id="getScientificNameFromNcbiTaxonomy" parameterType="java.lang.String" resultMap="TaxonMap">
		SELECT
			name_txt
			,tax_id
		FROM X1_NcbiTaxonomyName
		WHERE MATCH(name_txt) AGAINST(#{scientific_name} IN BOOLEAN MODE)
		HAVING name_txt=#{scientfic_name}
	</select>
	
	<select id="getScientificNameFromGbifTaxonomy" parameterType="java.lang.String" resultMap="TaxonMap">
		SELECT
			name_txt
			, tax_id
		FROM X1_GbifTaxonomyName
		WHERE MATCH(name_txt) AGAINST(#{scientific_name} IN BOOLEAN MODE)
		HAVING name_txt=#{scientfic_name}
	</select>

	<select id="getScientificNameFromItisTaxonomy" parameterType="java.lang.String" resultMap="TaxonMap">
		SELECT
			name_txt
			, tax_id
		FROM X1_ItisTaxonomyName
		WHERE MATCH(name_txt) AGAINST(#{scientific_name} IN BOOLEAN MODE)
		HAVING name_txt=#{scientfic_name}
	</select>

	<select id="getScientificNameFromKobicTaxonomy" parameterType="java.lang.String" resultMap="TaxonMap">
		SELECT
			name_txt
			, tax_id
		FROM X1_KobicTaxonomyName
		WHERE MATCH(name_txt) AGAINST(#{scientific_name} IN BOOLEAN MODE)
		HAVING name_txt=#{scientfic_name}
	</select>

	<select id="getT1ClassificationSystemTable" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT
			tab_id 
		FROM T1_ClassificationSystemTable
		<where>
			<if test="KOBIS_CODE != null">KOBIS_CODE=#{KOBIS_CODE}</if>
			<if test="ncbi_tax_id != null">AND ncbi_tax_id=#{ncbi_tax_id}</if>
			<if test="itis_tax_id != null">AND itis_tax_id=#{itis_tax_id}</if>
			<if test="gbif_tax_id != null">AND gbif_tax_id=#{gbif_tax_id}</if>
			<if test="scientific_name != null">AND scientific_name=#{scientific_name}</if>
		</where>
	</select>

	<insert id="insertT1ClassificationSystemTable" parameterType="java.util.Map">
		INSERT INTO T1_ClassificationSystemTable(
			KOBIS_CODE, ncbi_tax_id, itis_tax_id, gbif_tax_id, scientific_name
		) VALUES(
			#{KOBIS_CODE}, #{ncbi_tax_id}, #{itis_tax_id}, #{gbif_tax_id}, #{scientific_name}
		)
	</insert>

	<insert id="insertD1Common" parameterType="org.kobic.kobis.mybatis.db.vo.D1CommonVO">
		INSERT INTO D1_Common(
			accession_num, kobis_id, tab_id, common_name, kor_name
			, line_name, variety_name, taxonomy, institution
			, category_1, category_2, category_3, detail_url, barcode, keywords, img_url_1, ins_user_email
			, family, genus, subgenus, species, in_species_type, in_species_name, ins_cd, in_dt
		) VALUES(
			#{accession_num}, SF_GET_NEW_KOBIS_UNIQUE_ID(DATE_FORMAT(CURDATE(), '%Y%m%d'), #{ins_cd}), #{code}, #{common_name}, #{kor_name}
			, #{line_name}, #{variety_name}, #{taxonomy}, #{institution}
			, #{category_1}, #{category_2}, #{category_3}, #{detail_url}, null, #{keywords}, #{img_url_1}, #{ins_user_email}
			, #{family}, #{genus}, #{subgenus}, #{species}, #{in_species_type}, #{in_species_name}, #{ins_cd}, CURRENT_TIMESTAMP()
		)
	</insert>

	<insert id="insertSynonyms" parameterType="java.util.Map">
		INSERT INTO E1_Synonym( accession_num, synonym_id, synonym )
		VALUES( '${accession_num}', SF_GET_NEW_SYNONYM_ID('${accession_num}'), '${synonym}' )
	</insert>

	<insert id="insertD1Observation" parameterType="org.kobic.kobis.file.excel.obj.XObservationSheetObj">
		INSERT INTO ITIS.D1_Observation( accession_num, obs_id, latitude, longitude )
		VALUES( #{access_num}, SF_GET_NEW_OBSERVATION_ID(#{access_num}), #{gps.latitude}, #{gps.longitude} )
	</insert>

	<insert id="insertD1Individual" parameterType="org.kobic.kobis.file.excel.obj.XIndividualSheetObj">
		INSERT INTO ITIS.D1_Individual( accession_num, individual_id, individual_type, individual_maintenance )
		VALUES( #{access_num}, SF_GET_NEW_INDIVIDUAL_ID(#{access_num}), #{individual_type}, #{individual_maintenance} )
	</insert>

	<insert id="insertD1Specimen" parameterType="org.kobic.kobis.file.excel.obj.XSpecimenSheetObj">
		INSERT INTO D1_Specimen( 
			accession_num, specimen_id, morphology, kor_addr, eng_addr, laitude, longitude, collect_user
			, collect_dt, nation, ocean, island, specimen_type, kind_of_specimen, public_yn  
		)
		VALUES(
			#{access_num}, SF_GET_NEW_SPECIMEN_ID(#{accession_num}), #{morphology}, #{kor_addr}, #{eng_addr}, #{gps.latitude}, #{gps.longitude}, #{collect_user}
			, #{collect_dt}, #{nation}, #{ocean}, #{island}, #{specimen_type}, #{kind_of_specimen}, #{public_yn}  
		)
	</insert>

	<insert id="insertD1Organ" parameterType="org.kobic.kobis.file.excel.obj.XOrganSheetObj">
		INSERT INTO ITIS.D1_Organ( accession_num, organ_id, organ_type, disease )
		VALUES( #{access_num}, SF_GET_NEW_ORGANL_ID(#{access_num}), #{organ_type}, #{disease} )
	</insert>

	<insert id="insertD1Source" parameterType="org.kobic.kobis.file.excel.obj.XSourceSheetObj">
		INSERT INTO ITIS.D1_Source( accession_num, source_id, source_type, disease )
		VALUES( #{access_num}, SF_GET_NEW_SOURCE_ID(#{access_num}), #{source_type}, #{disease} )
	</insert>
	
	
	<!-- 이곳부터 D1_Seed 부터 	-->
	
	<insert id="insertD1Seed" parameterType="org.kobic.kobis.file.excel.obj.XSeedSheetObj">
		INSERT INTO ITIS.D1_Seed( accession_num, seed_id, seed_sttus )
		VALUES( #{access_num}, SF_GET_NEW_SEED_ID(#{access_num}), #{seed_status} )
	</insert>
	
	<insert id="insertD1Embryo" parameterType="org.kobic.kobis.file.excel.obj.XEmbryoSheetObj">
		INSERT INTO ITIS.D1_Embryo( accession_num, embryo_id, embryo_type )
		VALUES( #{access_num}, SF_GET_NEW_EMBRYO_ID(#{access_num}), #{embryo_type} )
	</insert>
		
	<insert id="insertD1DnaRnaProteinDerivatives" parameterType="org.kobic.kobis.file.excel.obj.XEDnaRnaProteinDerivativesSheetObj">
		INSERT INTO ITIS.D1_DNA_RNA_Protein_Derivatives
		( 
			accession_num, derivatives_id, source, detail_type
			, deposit_type, sample_type, sample_detail, sample_etc 
		)
		VALUES( 
			#{access_num}, SF_GET_NEW_DNA_RNA_PROT_DEV_ID(#{access_num}), #{source}, #{detail_type}
			, #{deposit_type}, #{sample_type}, #{sample_detail}, #{sample_etc} 
		)
	</insert>

	<insert id="insertD1Strain" parameterType="org.kobic.kobis.file.excel.obj.XStrainSheetObj">
		INSERT INTO ITIS.D1_Strain( accession_num, cellstrain_id, source, pathogenic_yn, strain_name )
		VALUES( #{access_num}, SF_GET_NEW_STRAIN_ID(#{access_num}), #{source}, #{pathogenic_yn}, #{strain_name} )
	</insert>

	<insert id="insertD1CellStrain" parameterType="org.kobic.kobis.file.excel.obj.XCellStrainSheetObj">
		INSERT INTO ITIS.D1_CellStrain( accession_num, cellstrain_id, source, cell_type, cell_name )
		VALUES( #{access_num}, SF_GET_NEW_CELL_STRAIN_ID(#{access_num}), #{source}, #{cell_type}, #{cell_name} )
	</insert>
	
	<insert id="insertD1BodyFluid" parameterType="org.kobic.kobis.file.excel.obj.XBodyFluidSheetObj">
		INSERT INTO ITIS.D1_BodyFluid( accession_num, body_fluid_id, body_fluid_type )
		VALUES( #{access_num}, SF_GET_NEW_CELL_BODY_FLUID_ID(#{access_num}), #{body_fluid_type} )
	</insert>
	
	<insert id="insertD1ProteinSequence" parameterType="org.kobic.kobis.file.excel.obj.XProteinSequenceSheetObj">
		INSERT INTO ITIS.D1_ProteinSequence( accession_num, protein_seq_id, source, protein_name, accession_no, sequence, open_yn, open_url )
		VALUES( #{access_num}, SF_GET_NEW_CELL_PROTEIN_SEQUENCE_ID(#{access_num}), #{source}, #{protein_name}, #{accession_no}, #{sequence}, #{open_yn}, #{open_url} )
	</insert>

	<insert id="insertD1Expression" parameterType="org.kobic.kobis.file.excel.obj.XProteinSequenceSheetObj">
		INSERT INTO ITIS.D1_Expression( accession_num, expression_id, source, data_type, expression_data, open_yn, open_url )
		VALUES( #{access_num}, SF_GET_NEW_CELL_EXPRESSION_ID(#{access_num}), #{source}, #{data_type}, #{expression_data}, #{open_yn}, #{open_url} )
	</insert>

	<insert id="insertD1Structure" parameterType="org.kobic.kobis.file.excel.obj.XStructureSheetObj">
		INSERT INTO ITIS.D1_Sturcture( accession_num, structure_id, source, structure_type, accession_no, pdb_format, open_yn, open_url )
		VALUES( #{access_num}, SF_GET_NEW_CELL_EXPRESSION_ID(#{access_num}), #{source}, #{structure_type}, #{accession_no}, #{pdb_format}, #{open_yn}, #{open_url} )
	</insert>

	<insert id="insertD1DnaSequence" parameterType="org.kobic.kobis.file.excel.obj.XDnaSequenceSheetObj">
		INSERT INTO ITIS.D1_Dna_Sequence
		( 
			accession_num, sequence_id, source, molecular_type, data_type
			, gene_name, accession_no, sequence, open_yn, open_url
			, gene_full_name, gene_alias 
		)
		VALUES(
			#{access_num}, SF_GET_NEW_DNA_SEQUENCE_ID(#{access_num}), #{source}, #{molecular_type}, #{data_type}
			, #{gene_name}, #{accession_no}, #{sequence}, #{open_yn}, #{open_url}
			, #{gene_full_naem}, #{gene_alias} 
		)
	</insert>
	
	<insert id="insertD1Etc" parameterType="org.kobic.kobis.file.excel.obj.XEtcSheetObj">
		INSERT INTO ITIS.D1_Etc( accession_num, etc_id, description, oepn_yn, open_url )
		VALUES( #{access_num}, SF_GET_NEW_ETC_EXPRESSION_ID(#{access_num}), #{description}, #{open_yn}, #{open_url} )
	</insert>

	<insert id="insertD1Extraction" parameterType="org.kobic.kobis.file.excel.obj.XExtractionSheetObj">
		INSERT INTO ITIS.D1_Extraction( accession_num, extract_id, source, solvent, extract_time )
		VALUES( #{access_num}, SF_GET_NEW_EXTRACT_EXPRESSION_ID(#{access_num}), #{source}, #{solvent}, #{extract_time} )
	</insert>

	<insert id="insertE1Culture" parameterType="java.util.Map">
		INSERT INTO E1_Culture( accession_num, id, culture_medium_name, condition, succeed_dt, succeed_time )
		VALUES( #{accession_num}, #{id}, #{culture_medium_name}, #{condition}, #{succeed_dt}, #{succeed_time} )
	</insert>
	
	<insert id="insertE1Store" parameterType="java.util.Map">
		INSERT INTO E1_Store( accession_num, id, store_no, store_place )
		VALUES( #{accession_num}, #{id}, #{store_no}, #{store_place} )
	</insert>

	<insert id="insertE1Distribution" parameterType="java.util.Map">
		INSERT INTO E1_Distribution( accession_num, id, dist_yn, dist_url )
		VALUES( #{accession_num}, #{id}, #{dist_yn}, #{dist_url} )
	</insert>

	<insert id="insertE1Reference" parameterType="java.util.Map">
		INSERT INTO E1_Reference( accession_num, id, ord, ref_no, reference )
		VALUES( #{accession_num}, #{id}, SF_GET_NEW_REFERENCE_ORD(#{accession}, #{id}), #{ref_no}, #{reference} )
	</insert>

	<insert id="insertE1Patent" parameterType="java.util.Map">
		INSERT INTO E1_Patent( accession_num, id, application_no, reg_no )
		VALUES( #{accession_num}, #{id}, #{application_no}, #{reg_no} )
	</insert>






	<insert id="insertUnmappedD1Common" parameterType="org.kobic.kobis.mybatis.db.vo.D1CommonVO">
		INSERT INTO T2_UnMappedCommon(
			accession_num, family, genus, subgenus, species, synonym, common_name, kor_name, in_species_type, in_species_name,
			line_name, variety_name, taxonomy, institution,	category_1, category_2, category_3, detail_url, gene_name,
			accession_no, sequence, keywords, img_url_1, ins_user_email, ins_cd, message
		) VALUES(
			'${access_num}', '${family}', '${genus}', '${subgenus}', '${species}', '${synonym}', '${common_name}', '${kor_name}'
			, '${in_species_type}', '${in_species_name}', '${line_name}', '${variety_name}', '${taxonomy}', '${institution}', '${category_1}'
			, '${category_2}', '${category_3}', '${detail_url}', '${gene_name}', '${accession_no}', '${sequence}', '${keywords}'
			, '${img_url_1}', '${ins_user_email}', '${ins_cd}', '${message}'
		)
	</insert>

	<insert id="insertMappedD1Common" parameterType="org.kobic.kobis.mybatis.db.vo.D1CommonVO">
		INSERT INTO T2_MappedCommon(
			accession_num, family, genus, subgenus, species, synonym, common_name, kor_name, in_species_type, in_species_name,
			line_name, variety_name, taxonomy, institution,	category_1, category_2, category_3, detail_url, gene_name,
			accession_no, sequence, keywords, img_url_1, ins_user_email, ins_cd, tab_id
		) VALUES(
			'${access_num}', '${family}', '${genus}', '${subgenus}', '${species}', '${synonym}', '${common_name}', '${kor_name}'
			, '${in_species_type}', '${in_species_name}', '${line_name}', '${variety_name}', '${taxonomy}', '${institution}', '${category_1}'
			, '${category_2}', '${category_3}', '${detail_url}', '${gene_name}', '${accession_no}', '${sequence}', '${keywords}'
			, '${img_url_1}', '${ins_user_email}', '${ins_cd}', '${code}'
		)
	</insert>

<!--
	<select id="getScientificNameFromKobicTaxonomy" parameterType="java.lang.String" resultType="org.kobic.kobis.mybatis.db.vo.NameWithTaxonIdVO">
		SELECT 
			CODE tax_id
			, CONCAT( trim(substring_index(genus, '|', 1)), ' ', trim(substring_index(species, '|', 1))) name_txt
		FROM X1_PhylogeneticTree
		WHERE CONCAT( trim(substring_index(genus, '|', 1)), ' ', trim(substring_index(species, '|', 1))) = #{scientific_name}
	</select>
 	<select id="getScientificNameFromKobicTaxonomyPure" parameterType="java.lang.String" resultType="org.kobic.kobis.mybatis.db.vo.NameWithTaxonIdVO">
		SELECT 
			CODE tax_id
			, CONCAT( trim(substring_index(genus, '|', 1)), ' ', trim(substring_index(species, '|', 1))) name_txt
		FROM X1_PhylogeneticTree
		WHERE CONCAT( trim(substring_index(genus, '|', 1)), ' ', trim(substring_index(species, '|', 1))) = #{scientific_name}
		AND SSP='종소명없음|국명없음' AND VAR='종소명없음|국명없음' AND F='종소명없음|국명없음'
	</select>

	<select id="getScientificNameFromKobicTaxonomyDetail" parameterType="java.util.Map" resultType="org.kobic.kobis.mybatis.db.vo.NameWithTaxonIdVO">
		SELECT
			CODE tax_id
			, CONCAT( trim(substring_index(genus, '|', 1)), ' ', trim(substring_index(species, '|', 1))) name_txt
		FROM X1_PhylogeneticTree
		WHERE CONCAT( trim(substring_index(genus, '|', 1)), ' ', trim(substring_index(species, '|', 1))) = #{scientific_name}
		AND ( SSP LIKE CONCAT(#{detail}, '%') OR VAR LIKE CONCAT(#{detail}, '%') OR F LIKE CONCAT( #{detail}, '%') )
	</select>
 -->
</mapper>